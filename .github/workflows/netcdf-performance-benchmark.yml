name: NetCDF-4 Performance Benchmark

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout NetCDF-C
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          gfortran \
          libcurl4-openssl-dev \
          libzip-dev \
          zlib1g-dev \
          libbz2-dev \
          libaec-dev \
          openmpi-bin \
          openmpi-common \
          libopenmpi-dev \
          python3 \
          python3-pip \
          python3-numpy \
          git \
          pkg-config

    - name: Install Python dependencies
      run: |
        pip3 install --user matplotlib pandas scipy

    - name: Get HDF5 develop commit hash
      id: hdf5-hash
      run: |
        HDF5_HASH=$(git ls-remote https://github.com/HDFGroup/hdf5.git refs/heads/develop | awk '{print $1}')
        echo "hash=$HDF5_HASH" >> $GITHUB_OUTPUT
        echo "HDF5 develop commit: $HDF5_HASH"

    - name: Cache HDF5 build
      id: cache-hdf5
      uses: actions/cache@v4
      with:
        path: |
          hdf5-install
          hdf5-build
        key: hdf5-develop-${{ steps.hdf5-hash.outputs.hash }}-ubuntu-24.04

    - name: Checkout and build HDF5 develop
      if: steps.cache-hdf5.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/HDFGroup/hdf5.git
        cd hdf5
        git checkout develop
        mkdir -p ../hdf5-build
        cd ../hdf5-build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/hdf5-install \
              -DHDF5_ENABLE_PARALLEL=OFF \
              -DHDF5_ENABLE_THREADSAFE=OFF \
              -DBUILD_TESTING=OFF \
              -DHDF5_BUILD_EXAMPLES=OFF \
              -DHDF5_BUILD_TOOLS=ON \
              -DHDF5_ENABLE_ZLIB_SUPPORT=ON \
              ../hdf5
        make -j$(nproc)
        make install

    - name: Set up HDF5 environment
      run: |
        echo "$GITHUB_WORKSPACE/hdf5-install/bin" >> $GITHUB_PATH
        echo "HDF5_ROOT=$GITHUB_WORKSPACE/hdf5-install" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/hdf5-install/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/hdf5-install/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

    - name: Build NetCDF-C with HDF5 develop
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/netcdf-install \
              -DENABLE_HDF5=ON \
              -DUSE_PARALLEL=OFF \
              -DHDF5_PARALLEL=OFF \
              -DUSE_PARALLEL4=OFF \
              -DHDF5_ROOT=$GITHUB_WORKSPACE/hdf5-install \
              -DENABLE_PARALLEL4=OFF \
              -DENABLE_DAP=OFF \
              -DENABLE_LIBXML2=OFF \
              -DENABLE_NCZARR=OFF \
              -DENABLE_BYTERANGE=OFF \
              -DBUILD_UTILITIES=ON \
              -DBUILD_TESTING=ON \
              -DENABLE_BENCHMARKS=ON \
              ..
        make -j$(nproc)
        make install

    - name: Set up NetCDF environment
      run: |
        echo "$GITHUB_WORKSPACE/netcdf-install/bin" >> $GITHUB_PATH
        echo "NETCDF_ROOT=$GITHUB_WORKSPACE/netcdf-install" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/netcdf-install/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Build benchmark test
      run: |
        cd build
        # Build the specific benchmark test
        make -j$(nproc) -C nc_perf tst_chunks3

    - name: Run NetCDF-4 Performance Benchmarks
      run: |
        cd build/nc_perf

        # Create results directory
        mkdir -p $GITHUB_WORKSPACE/benchmark-results

        # Define test configurations for different scenarios
        echo "Running NetCDF-4 Chunking Performance Benchmarks..."

        # Single comprehensive test run - tst_chunks3 runs all scenarios internally
        echo "=== NetCDF-4 Chunking Performance Benchmarks ===" | tee $GITHUB_WORKSPACE/benchmark-results/tst_chunks3_results.txt
        echo "Testing with deflate level: 6" | tee -a $GITHUB_WORKSPACE/benchmark-results/tst_chunks3_results.txt
        ./tst_chunks3 6 512 64 512 64 512 64 | tee -a $GITHUB_WORKSPACE/benchmark-results/tst_chunks3_results.txt

    - name: Process benchmark results to JSON
      run: |
        cd $GITHUB_WORKSPACE
        python3 .github/scripts/parse_benchmark_results.py \
          benchmark-results \
          benchmark-results/benchmark_data.json \
          ${{ steps.hdf5-hash.outputs.hash }}

    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: 'NetCDF-4 Chunking Performance Benchmarks'
        tool: 'customSmallerIsBetter'
        output-file-path: benchmark-results/benchmark_data.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        # Push and deploy GitHub pages branch automatically
        gh-pages-branch: gh-pages
        benchmark-data-dir-path: benchmarks
        skip-fetch-gh-pages: false
        comment-always: false
        summary-always: false
        save-data-file: true
        comment-on-alert: false
        alert-threshold: 200%
        fail-on-alert: false

    - name: Checkout gh-pages branch for custom plots
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create custom HDF5 benchmark plots
      run: |
        cd $GITHUB_WORKSPACE
        python3 .github/scripts/create_hdf5_benchmark_plot.py \
          benchmark-results/detailed_results.json \
          gh-pages/custom-plots \
          --gh-pages-dir gh-pages

    - name: Create benchmark index page
      run: |
        cd $GITHUB_WORKSPACE
        python3 .github/scripts/create_index_html.py gh-pages

    - name: Commit and push custom plots
      run: |
        cd gh-pages
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add custom-plots/ benchmark-index.html
        if git diff --staged --quiet; then
          echo "No changes to custom plots"
        else
          git commit -m "Update HDF5 benchmark plots for commit ${{ steps.hdf5-hash.outputs.hash }}"
          git push
        fi

    - name: Upload detailed results
      uses: actions/upload-artifact@v4
      with:
        name: netcdf-benchmark-results-${{ github.run_number }}
        path: benchmark-results/
        retention-days: 30